Q1
from nltk.corpus import stopwords
import string
stop_words = set(stopwords.words('english'))

def remove_stopwords(text):
    words = text.split()
    cleaned_words = [word for word in words if word.lower() not in stop_words and word not in string.punctuation]
    return ' '.join(cleaned_words)

with open("input_text.txt", "r") as file:
    passage = file.read()

cleaned_passage = remove_stopwords(passage)

print("Original passage:\n", passage)
print("\nPassage without stop words:\n", cleaned_passage)

Q2
from collections import deque
def bfs(graph,start):
    visited=set()
    queue=deque([start])
    traversal_order=[]
    while queue:
        node=queue.popleft()
        if node not in visited:
            visited.add(node)
            traversal_order.append(node)
            for neighbour in graph[node]:
                if neighbour not in visited:
                    queue.append(neighbour)
    return traversal_order

graph={
        'A':['B','C'],
        'B':['D','E'],
        'C':['F','G'],
        'D':[],'E':[],'F':[],'G':[]
        }

start_node='A'
res=bfs(graph,start_node)
print("BFS Traversal : ",res)
